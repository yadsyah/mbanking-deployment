version: '3'
services:
# Auth Layer
  auth-service:
    build: ./nginx/auth/.
    container_name: auth-service
    hostname: auth-service
# Network Layer
  nginx-api-gateway:
    image: nginx
    container_name: nginx-api-gateway
    hostname: nginx-api-gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/index.html:/app/html:ro
    ports:
      - 80:80
# Monitoring Layer
  zipkin-mysql:
    image: openzipkin/zipkin-mysql:1.30.2
    container_name: zipkin-mysql
    hostname: zipkin-mysql
    ports:
      - 33061:3306
  zipkin-query:
    image: openzipkin/zipkin-java:0.4.4
    container_name: zipkin-query
    hostname: zipkin-query
    environment:
      TRANSPORT_TYPE: http
      STORAGE_TYPE: mysql
    expose:
      - 9411
    ports:
      - 9411:9411
    links:
      - mysql:storage
  zipkin-web:
    image: openzipkin/zipkin-web:1.30.2
    container_name: zipkin-web
    hostname: zipkin-web
    environment:
      TRANSPORT_TYPE: http
    ports:
      - 8080:8080
      - 9990:9990
    links:
      - query
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    hostname: elasticsearch
    container_name: elasticsearch
    environment:
      xpack.security.enabled: false
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    container_name: kibana
    hostname: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.4.0
    volumes:
      - type: bind
        source: /Users/diansetiyadi/WorkPermata/Services Permata/digital-mortgage-svc/app/logs
        target: /usr/share/logstash/input
        read_only: true
    depends_on:
      - elasticsearch
  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper1
    container_name: zookeeper1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - 22181:2181
  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper1
    ports:
      - 29092:29092
      - 9999:9999
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_JMX_PORT: 9999
# DB Apps Layer
  db-notification-service:
    image: mongo
    container_name: db-notification-service
    hostname: db-notification-service
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_notification:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8099:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@db-notification-service:27017/
  db-digital-opening-service:
    image: postgres:latest
    hostname: db-digital-opening-service
    container_name: db-digital-opening-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
      POSTGRES_DB: digital_opening
    ports:
      - 5432:5432
    volumes:
       - postgres_digital_opening:/data/postgres
  db-favourite-service:
    image: postgres:latest
    hostname: db-favourite-service
    container_name: db-favourite-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
      POSTGRES_DB: favourite
    ports:
      - 54321:5432
    volumes:
       - postgres_favourite:/data/postgres
  db-bill-payment-service:
    image: postgres:latest
    hostname: db-bill-payment-service
    container_name: db-bill-payment-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
      POSTGRES_DB: bill_payment
    ports:
      - 54323:5432
    volumes:
      - postgres_bill_payment:/data/postgres
  db-bill-topup-service:
    image: postgres:latest
    hostname: db-bill-topup-service
    container_name: db-bill-topup-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
      POSTGRES_DB: bill_topup
    ports:
      - 54324:5432
    volumes:
      - postgres_bill_topup:/data/postgres
# APPS Layer
  digital-opening-service:
    image: diyset/digital-opening:master-latest
    hostname: digital-opening-service
    container_name: digital-opening-service
    environment:
      DB_HOST: db-digital-opening-service
      DB_PORT: 5432
      DB_ENGINE: postgres
      DB_NAME: digital_opening
      SPRING_PROFILES_ACTIVE: docker
      PORT: 8080
      DB_DDL: update
    ports:
      - 9201:8080
  notification-service:
    image: diyset/notification-service:master-latest
    hostname: notification-service
    container_name: notification-service
    environment:
      DB_ENGINE: mongodb
      DB_PORT: 27017
      DB_HOST: db-notification-service
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
      PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 9202:8080
  firebase-service:
    image: diyset/firebase-service:master-latest
    container_name: firebase-service
    hostname: firebase-service
    environment:
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
      SPRING_PROFILES_ACTIVE: docker
  mail-service:
    image: diyset/mail-service:master-latest
    container_name: mail-service
    hostname: mail-service
    environment:
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
      SPRING_PROFILES_ACTIVE: docker
  inbox-service:
    image: diyset/inbox-service:master-latest
    container_name: inbox-service
    hostname: inbox-service
    environment:
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
      PORT: 8080
      DB_HOST: db-notification-service
      DB_PORT: 27017
      DB_ENGINE: mongodb
      DB_NAME: mbanking-inbox
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 9203:8080
  sms-service:
    image: diyset/sms-service:master-latest
    container_name: sms-service
    hostname: sms-service
    environment:
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
      SPRING_PROFILES_ACTIVE: docker
  bill-topup-service:
    image: diyset/bill-topup-service:master-latest
    container_name: bill-topup-service
    hostname: bill-topup-service
    environment:
      DB_PORT: 5432
      DB_HOST: db-bill-topup-service
      DB_ENGINE: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: bill_topup
      SPRING_PROFILES_ACTIVE: docker
      PORT: 8080
    ports:
      - 9206:8080
    depends_on:
      - db-bill-topup-service
      - zipkin
      - logstash
  bill-payment-service:
    image: diyset/bill-payment-service:master-latest
    hostname: bill-payment-service
    container_name: bill-payment-service
    environment:
      DB_PORT: 5432
      DB_HOST: db-bill-topup-service
      DB_ENGINE: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: bill_payment
      SPRING_PROFILES_ACTIVE: docker
      PORT: 8080
    ports:
      - 9207:8080
    depends_on:
      - db-bill-topup-service
      - zipkin
      - logstash

volumes:
    postgres_digital_opening:
    postgres_favourite:
    postgres_bill_payment:
    postgres_bill_topup:
    elasticsearch-data:
    mongodb_data_notification: